/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.76
 * Generated at: 2022-05-18 03:59:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.gcenter;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import shop.ShopDAO;
import java.util.List;
import comment.CommentDTO;
import comment.CommentDAO;
import member.MemberDAO;
import java.text.SimpleDateFormat;
import board.BoardDTO;
import board.BoardDAO;

public final class gcontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("member.MemberDAO");
    _jspx_imports_classes.add("board.BoardDAO");
    _jspx_imports_classes.add("shop.ShopDAO");
    _jspx_imports_classes.add("comment.CommentDAO");
    _jspx_imports_classes.add("board.BoardDTO");
    _jspx_imports_classes.add("comment.CommentDTO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>gcenter/gcontent.jsp</title>\r\n");
      out.write("<link href=\"../css/default.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link href=\"../css/subpage.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script src=\"http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"http://ie7-js.googlecode.com/svn/version/2.1(beta4)/ie7-squish.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<!--[if IE 6]>\r\n");
      out.write(" <script src=\"../script/DD_belatedPNG_0.0.8a.js\"></script>\r\n");
      out.write(" <script>\r\n");
      out.write("   /* EXAMPLE */\r\n");
      out.write("   DD_belatedPNG.fix('#wrap');\r\n");
      out.write("   DD_belatedPNG.fix('#main_img');   \r\n");
      out.write("\r\n");
      out.write(" </script>\r\n");
      out.write(" <![endif]-->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"wrap\">\r\n");
      out.write("<!-- 헤더들어가는 곳 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/top.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- 헤더들어가는 곳 -->\r\n");
      out.write("<!-- 본문들어가는 곳 -->\r\n");
      out.write("<!-- 메인이미지 -->\r\n");
      out.write("<div id=\"sub_img_center\"></div>\r\n");
      out.write("<!-- 메인이미지 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 왼쪽메뉴 -->\r\n");
      out.write("<nav id=\"sub_menu\">\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a href=\"../center/notice.jsp\">Notice</a></li>\r\n");
      out.write("<li><a href=\"#\">Public News</a></li>\r\n");
      out.write("<li><a href=\"../fcenter/fnotice.jsp\">Driver Download</a></li>\r\n");
      out.write("<li><a href=\"#\">Service Policy</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- 왼쪽메뉴 -->\r\n");
      out.write("<!-- 게시판 -->\r\n");


request.setCharacterEncoding("utf-8");
String id = (String)session.getAttribute("id");
int num = Integer.parseInt(request.getParameter("num"));
int pageSize = 10;

String pageNum= request.getParameter("pageNum");

if(pageNum == null){
	pageNum = "1";
}
int currentPage = Integer.parseInt(pageNum);

int startRow = (currentPage - 1) * pageSize +1;

int endRow = startRow + (pageSize - 1);

ShopDAO shopDAO = new ShopDAO();

//게시판 글 조회수 증가
// 리턴할형 없음 updateReadcount(int num) 메서드
// update board set readcount = readcount +1 where num=?
// updateReadcount(num) 호출

BoardDTO boardDTO = shopDAO.getShop(num);
shopDAO.updateReadcount(num);

CommentDAO commentDAO = new CommentDAO();

boardDTO.setNum(num);

List<CommentDTO> commentList=commentDAO.getCommentList(boardDTO.getNum(), startRow, pageSize);

SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy.M.d. H:mm");


      out.write("\r\n");
      out.write("\r\n");
      out.write("<article>\r\n");
      out.write("<h1>상품</h1>\r\n");
      out.write("\r\n");
      out.write("<table id=\"notice\">\r\n");
      out.write("<tr><td>글번호</td><td>");
      out.print(boardDTO.getNum());
      out.write("</td>\r\n");
      out.write("    <td>등록일</td><td>");
      out.print(dateFormat.format(boardDTO.getDate()));
      out.write("</td></tr>\r\n");
      out.write("<tr><td>글쓴이</td><td>");
      out.print(boardDTO.getName());
      out.write("</td>\r\n");
      out.write("    <td>조회수</td><td>");
      out.print(boardDTO.getReadcount());
      out.write("</td></tr>\r\n");
      out.write("<tr><td>글제목</td><td colspan=\"3\">");
      out.print(boardDTO.getSubject());
      out.write("</td></tr>\r\n");
      out.write("<tr><td>첨부파일</td><td colspan=\"3\"><a href=\"../upload/");
      out.print(boardDTO.getFile());
      out.write('"');
      out.write(' ');
      out.write('>');
      out.print(boardDTO.getFile());
      out.write("</a></td></tr>\r\n");
      out.write("<tr><td>이미지</td><td colspan=\"3\"><img src=\"../upload/");
      out.print(boardDTO.getFile());
      out.write("\" ></td></tr>\r\n");
      out.write("<tr><td>글내용</td><td colspan=\"3\">");
      out.print(boardDTO.getContent());
      out.write("</td></tr>\r\n");
      out.write("<tr><td>가격</td><td colspan=\"3\">");
      out.print(boardDTO.getPrice() );
      out.write("&nbsp; point</td></tr>\r\n");
      out.write("</table><br>\r\n");
if(id != null){
      out.write('\r');
      out.write('\n');
 if (!id.equals(boardDTO.getName())) {
      out.write("\r\n");
      out.write("	<form action=\"purchasePro.jsp\" method=\"post\">\r\n");
      out.write("	<input type=\"hidden\" name=\"price\" value=\"");
      out.print(boardDTO.getPrice());
      out.write("\"> \r\n");
      out.write("	<input type=\"hidden\" name=\"merchantId\" value=\"");
      out.print(boardDTO.getName());
      out.write("\"> \r\n");
      out.write("	<input type=\"hidden\" name=\"boardNum\" value=\"");
      out.print(boardDTO.getNum());
      out.write("\"> \r\n");
      out.write("	<input type=\"submit\" id=\"purchase\" name=\"purchase\" value=\"구매하기\"  style=\"cursor: pointer; border: 1px solid #222; \r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	letter-spacing: 1px;\r\n");
      out.write("	padding: 7px 25px;\r\n");
      out.write("	margin: 0px auto;\r\n");
      out.write("	display: block; \"></form><br>\r\n");
      out.write("	");
}}else{ 
      out.write("<p style=\"border: 1px solid #222; \r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	letter-spacing: 1px;\r\n");
      out.write("	padding: 7px 25px;\r\n");
      out.write("	margin: 0px auto;\r\n");
      out.write("	display: block; \">로그인 후 구매 하실 수 있습니다</p><br>");
} 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<div id=\"comment\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- table로 추후에 변경 --> \r\n");
      out.write("<fieldset>\r\n");
      out.write("댓글목록<br>\r\n");
      out.write("<form action=\"gdeleteCommentPro.jsp\" name=\"gdeleteComment\" method=\"post\" onsubmit=\"return fn_deletecomment();\">\r\n");
      out.write("<table id=\"notice\" style=\"width: 100%\">\r\n");
try{
    for(int i = 0; i < commentList.size(); i++){
    	// 배열 한칸 데이터 가져올때 get()
    	CommentDTO commentDTO = commentList.get(i);
      out.write("\r\n");
      out.write("    	<tr><td class=\"left\">");
      out.print(commentDTO.getName() );
      out.write("</td>\r\n");
      out.write("        <td colspan=\"2\" style=\"width: 50%; \">");
      out.print(commentDTO.getComment());
      out.write("</td><td></td>\r\n");
      out.write("        <td style=\"font-size: 1px\">");
      out.print(dateFormat.format(commentDTO.getDate()));
      out.write("</td>\r\n");
      out.write("        <td><input type=\"hidden\" value=\"");
      out.print(commentDTO.getId());
      out.write('"');
      out.write('>');
if(id.equals(commentDTO.getId())){
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <input type=\"hidden\" name=\"gcomment_num\" value=\"");
      out.print(commentDTO.getComment_num());
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" name=\"num\" value=\"");
      out.print(boardDTO.getNum());
      out.write("\">\r\n");
      out.write("        <input type=\"submit\" value=\"댓글삭제\" style=\"cursor: pointer; float: left;\">\r\n");
      out.write("        <input type=\"button\" name=\"gcommentUpate\" value=\"댓글수정\" onclick=\"return fn_updateComment(this.form);\" style=\"float: left;\">");
}
      out.write("</td>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
}
        } catch (Exception e){
        	e.printStackTrace();}
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<form name=\"fr\" action=\"gcommentPro.jsp\" method=\"post\" onsubmit=\"return fn_content();\">\r\n");
      out.write("<fieldset>\r\n");
      out.write("댓글작성란<br>\r\n");
      out.write("<textarea name=\"comment\" rows=5 cols=75 style=\"resize: none\"></textarea>\r\n");
      out.write("<input type=\"hidden\" name=\"num\" value=\"");
      out.print(boardDTO.getNum());
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<input type=\"submit\" value=\"댓글작성\" class=\"btn\" style=\"cursor: pointer; width: 80px; height: 80px; margin: auto;\">\r\n");
      out.write("</fieldset>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"page_control\">\r\n");



int pageBlock=3;

//시작하는 페이지 번호
// pageNum(currentPage) pageBlock => startPage
// 		1~10(0~9)			10		=>	0*10 + 1 => 1
//		11~20(10~19)		10		=>	1*10 + 1 =>11
//		21~30(20~29)		10		=>	2*10 + 1 =>21
int startPage = (currentPage-1) / pageBlock * pageBlock+1; 
//끝나는 페이지 번호
int endPage = startPage + pageSize - 1;



// 구한 끝나는 페이지번호 10, 실제 페이지 번호 2
// 글개수 구하기

// 전체페이지 개수 구하기 글개수 50 , 한화면에 보여줄 글개수 10 => 페이지개수 5 + 0 => 5
// 전체페이지 개수 구하기 글개수 50 , 한화면에 보여줄 글개수 10 => 페이지개수 5 + 1 => 6
// int PageCount=글개수/pageSize + (글개수%pageSize==0?0:1);
int count = commentDAO.getCommentCount(boardDTO.getNum());

int pageCount = count/pageSize + (count%pageSize==0?0:1);
if(endPage > pageCount){
	endPage=pageCount;
	}

      out.write("\r\n");
      out.write("\r\n");

if(startPage > pageBlock){
	
      out.write("\r\n");
      out.write("	<a href=\"content.jsp?pageNum=");
      out.print(startPage-pageBlock);
      out.write("&num=");
      out.print(num);
      out.write("\">Prev</a>\r\n");
      out.write("	");

}

      out.write('\r');
      out.write('\n');
for(int i=startPage; i<=endPage; i++) {


      out.write("\r\n");
      out.write("<a href=\"content.jsp?pageNum=");
      out.print(i);
      out.write("&num=");
      out.print(num);
      out.write('"');
      out.write('>');
      out.print(i );
      out.write("</a>\r\n");


}

      out.write('\r');
      out.write('\n');
 if(endPage < pageCount){

      out.write("\r\n");
      out.write("<a href=\"content.jsp?pageNum=");
      out.print(startPage+pageBlock);
      out.write("&num=");
      out.print(num);
      out.write("\">Next</a>\r\n");

}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"table_search\">\r\n");
if(id != null ) {
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
if(id.equals(boardDTO.getName())) {
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"글수정\" class=\"btn\" style=\"cursor: pointer;\" onclick=\"location.href='gupdate.jsp?num=");
      out.print(boardDTO.getNum());
      out.write("'\">\r\n");
      out.write("<form action=\"fdeleteBoard.jsp\" name=\"deleteB\" onsubmit=\"return fn_deleteBoard()\" style=\"float: left;\">\r\n");
      out.write("<input type=\"hidden\" name=\"num\" value=\"");
      out.print(boardDTO.getNum());
      out.write("\">\r\n");
      out.write("<input type=\"submit\" value=\"글삭제\" class=\"btn\" style=\"cursor: pointer;\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
}
}
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"글목록\" class=\"btn\" onclick=\"location.href=gnotice.jsp\" style=\"cursor: pointer;\">\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"clear\"></div>\r\n");
      out.write("\r\n");
      out.write("</article>\r\n");
      out.write("<!-- 게시판 -->\r\n");
      out.write("<!-- 본문들어가는 곳 -->\r\n");
      out.write("<div class=\"clear\"></div>\r\n");
      out.write("<!-- 푸터들어가는 곳 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/bottom.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- 푸터들어가는 곳 -->\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	function fn_content() {\r\n");
      out.write("		if(document.fr.comment.value==\"\") {\r\n");
      out.write("			\r\n");
      out.write("			alert(\"댓글내용을 작성해주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(document.fr.id.value==\"null\" || document.fr.id.value==\"\") {\r\n");
      out.write("			alert(\"로그인후 댓글 작성해주세요\");\r\n");
      out.write("			location.href=\"../member/login.jsp\";\r\n");
      out.write("			return false;\r\n");
      out.write("		} else {\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("	}//fn_content()\r\n");
      out.write("	function fn_deletecomment() {\r\n");
      out.write("			if(confirm(\"정말 삭제하시겠습니까?\") == true) {\r\n");
      out.write("				\r\n");
      out.write("				return true;\r\n");
      out.write("			}else {\r\n");
      out.write("				\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("	}//fn_deletecomment()\r\n");
      out.write("	function fn_updateComment(fn) {\r\n");
      out.write("		fn.action=\"gupdateComment.jsp\"; \r\n");
      out.write("	    fn.submit();\r\n");
      out.write("	    return true;\r\n");
      out.write("	}//updatComment()\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	function fn_deleteBoard() {\r\n");
      out.write("		if(confirm(\"정말 삭제하시겠습니까?\") == true) {\r\n");
      out.write("			\r\n");
      out.write("			return true;\r\n");
      out.write("		}else {\r\n");
      out.write("			\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
